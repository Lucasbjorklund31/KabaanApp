[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\lucas\AppData\Local\Temp\idea.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\lucas\AppData\Local\Temp\idea.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.6.2 (International Business Machines Corporation Java 16.0.2)
[debug]       Load.loadUnit: plugins took 90.2748ms
[debug]       Load.loadUnit: defsScala took 0.3755ms
[debug] [Loading] Scanning directory C:\Users\lucas\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\lucas\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 23.1293 ms
[debug]           Load.resolveProject(global-plugins) took 46.3737ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\lucas\.sbt\1.0\plugins, plugins: List(<none>))) took 86.253ms
[debug] [Loading] Done in C:\Users\lucas\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 109.9561ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.2806ms
[debug]     Load.loadUnit(file:/C:/Users/lucas/.sbt/1.0/plugins/, ...) took 211.7083ms
[debug]   Load.apply: load took 410.0622ms
[debug]   Load.apply: resolveProjects took 6.3009ms
[debug]   Load.apply: finalTransforms took 105.8037ms
[debug]   Load.apply: config.delegates took 8.189ms
[debug]   Load.apply: Def.make(settings)... took 647.7645ms
[debug]   Load.apply: structureIndex took 143.2536ms
[debug]   Load.apply: mkStreams took 1.6623ms
[info] loading global plugins from C:\Users\lucas\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 3249.3288ms
[debug]           Load.loadUnit: plugins took 16.8267ms
[debug]           Load.loadUnit: defsScala took 0.005ms
[debug] [Loading] Scanning directory C:\Users\lucas\.vscode\OS2 kabaan-app\project
[debug]             Load.loadUnit: mkEval took 6.0567ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\lucas\.vscode\OS2 kabaan-app\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 1.3453 ms
[info] loading settings for project os2-kabaan-app-build from idea.sbt ...
[debug]               Load.resolveProject(os2-kabaan-app-build) took 5.825ms
[debug]             Load.loadTransitive: finalizeProject(Project(id os2-kabaan-app-build, base: C:\Users\lucas\.vscode\OS2 kabaan-app\project, plugins: List(<none>))) took 7.6062ms
[debug] [Loading] Done in C:\Users\lucas\.vscode\OS2 kabaan-app\project, returning: (os2-kabaan-app-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 2502.6527ms
[debug]           Load.loadUnit: cleanEvalClasses took 5.5207ms
[debug]         Load.loadUnit(file:/C:/Users/lucas/.vscode/OS2%20kabaan-app/project/, ...) took 2525.8753ms
[debug]       Load.apply: load took 2528.1063ms
[debug]       Load.apply: resolveProjects took 0.0947ms
[debug]       Load.apply: finalTransforms took 21.225ms
[debug]       Load.apply: config.delegates took 0.347ms
[debug]       Load.apply: Def.make(settings)... took 87.0133ms
[debug]       Load.apply: structureIndex took 50.8047ms
[debug]       Load.apply: mkStreams took 0.0038ms
[info] loading project definition from C:\Users\lucas\.vscode\OS2 kabaan-app\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[debug]     Load.loadUnit: plugins took 4804.7501ms
[debug]     Load.loadUnit: defsScala took 0.0038ms
[debug] [Loading] Scanning directory C:\Users\lucas\.vscode\OS2 kabaan-app
[debug]       Load.loadUnit: mkEval took 0.2264ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\lucas\.vscode\OS2 kabaan-app, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin)))
[debug] Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 1.4002 ms
[info] loading settings for project os2-kabaan-app from build.sbt ...
[debug]         Load.resolveProject(os2-kabaan-app) took 19.418ms
[debug]       Load.loadTransitive: finalizeProject(Project(id os2-kabaan-app, base: C:\Users\lucas\.vscode\OS2 kabaan-app, plugins: List(<none>))) took 21.8353ms
[debug] [Loading] Done in C:\Users\lucas\.vscode\OS2 kabaan-app, returning: (os2-kabaan-app)
[debug]     Load.loadUnit: loadedProjectsRaw took 2441.2296ms
[debug]     Load.loadUnit: cleanEvalClasses took 28.2738ms
[debug]   Load.loadUnit(file:/C:/Users/lucas/.vscode/OS2%20kabaan-app/, ...) took 7275.1412ms
[debug] Load.apply: load took 7277.1445ms
[debug] Load.apply: resolveProjects took 0.1035ms
[debug] Load.apply: finalTransforms took 27.5402ms
[debug] Load.apply: config.delegates took 0.2595ms
[debug] Load.apply: Def.make(settings)... took 81.2214ms
[debug] Load.apply: structureIndex took 51.0674ms
[debug] Load.apply: mkStreams took 0.0052ms
[info] set current project to OS2 kabaan-app (in build file:/C:/Users/lucas/.vscode/OS2%20kabaan-app/)
[warn] there's a key that's not used by any other settings/tasks:
[warn]  
[warn] * os2-kabaan-app / mainClass
[warn]   +- C:\Users\lucas\.vscode\OS2 kabaan-app\build.sbt:16
[warn]  
[warn] note: a setting might still be used by a command; to exclude a key from this `lintUnused` check
[warn] either append it to `Global / excludeLintKeys` or call .withRank(KeyRanks.Invisible) on the key
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 61203 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 61203, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to OS2 kabaan-app (in build file:/C:/Users/lucas/.vscode/OS2%20kabaan-app/)
[debug] > Exec(idea-shell, None, None)
